<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.muda.dao.platform.job.PlatformJobDao">

    <!--增-->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into platform_job(job_name,project_name,status,begin_time,end_time,message)
        VALUES(#{job_name},#{projectName},#{status},#{crontab},#{beginTime},#{endTime},#{message});
    </insert>

    <!--删-->
    <delete id="delete">
        DELETE from `platform_job` WHERE id = #{id}
    </delete>

    <!--删【批量】-->
    <delete id="batchRemove">
        DELETE from `platform_job` WHERE id in
        <foreach collection="array" item="ids" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </delete>


    <!--改-->
    <update id="update">
        UPDATE `platform_job`
        <set>
            <if test="jobName !=null">job_name = #{jobName},</if>
            <if test="projectName !=null">project_name = #{projectName},</if>
            <if test="status !=null">status = #{status},</if>
            <if test="beginTime !=null">begin_time = #{beginTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="message != null">message = #{message}</if>
        </set>
        where id = #{id}
    </update>


    <!--查-->
    <select id="get" resultType="com.muda.beans.platform.job.PlatformJob">
        select * from `platform_job` where job_name LIKE CONCAT('%',#{jobName},'%')
    </select>

    <!-- 用于查询projectName -->
    <select id="findByName" resultType="java.lang.String">
        SELECT project_name from platform_job where `status` =1;
    </select>




    <!--增-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into platform_job(job_name,project_name) VALUES(#{jobName},#{projectName});
    </insert>

    <!-- 用于查询case数量 -->
    <select id="findCount" resultType="java.lang.Integer">
        <!--SELECT count(job_name) as con  from `platform_job`;-->
        select round((B.b/A.a),2)*100 as con
        from (SELECT job_name as a from `platform_job` where job_name=100 limit 1) A ,
        ( SELECT count(job_name) as b from `platform_job` ) B;
    </select>


</mapper>